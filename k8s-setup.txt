1-Update the apt package index and install packages needed to use the Kubernetes apt repository:

   sudo apt-get update

   sudo apt-get install -y apt-transport-https ca-certificates curl

2- Download the Google Cloud public signing key:

curl -fsSL https://dl.k8s.io/apt/doc/apt-key.gpg | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-archive-keyring.gpg

3- Add the Google-hosted apt repository:

echo "deb [signed-by=/etc/apt/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list


4- Update the apt package index, install kubelet, kubeadm and kubectl, and pin their version:

 sudo apt-get update
 sudo apt-get install -y kubelet kubeadm kubectl

5- Alternatively, if you are the root user, you can run:

  sudo su
  kubeadm init   -----run this command on master node only

  export KUBECONFIG=/etc/kubernetes/admin.conf

6- apply a file to setup and create a weavework network between master nad worker node-
 
  kubectl apply -f https://github.com/weaveworks/weave/releases/download/v2.8.1/weave-daemonset-k8s.yaml


7- create a kubeadm token to provide worker node to join cluster-
 
   kubeadm token create --print-join-command

switch to worker node------------------------------->>>>>>>>>>>>>>>>>>>

sudo su
kubeadm reset pre-flight checks

-----> Paste the Join command on worker node and append --v=5 at end for compatible versions.


switch to master-node--------->>>>>>>>>>>>>>>>>>>>>>>>>>

kubectl get nodes
kubectl get pod

ex----

1- to run nginx pod---

 kubectl run nginx --image=nginx --restart=Never

nginx pod created successfully.

10-- switch to worker node and check---

    docker ps ----(nginx is runnug)

















